# mount drive
def mountStorageContainer(storageAccount, storageAccountKey, storageContainer, blobMountPoint):
  mountStatus = dbutils.fs.mount(
    source = "wasbs://" + storageContainer + "@" + storageAccount + ".blob.core.windows.net/",
    mount_point = blobMountPoint,
    extra_configs = {"fs.azure.account.key." + storageAccount + ".blob.core.windows.net": storageAccountKey})
  print("Status of mount of container " + storageContainer + " is: " + str(mountStatus))
  
storageAccount = "storagename"
storageAccountKey="keys*****************************"
try:
    mountStorageContainer(storageAccount, storageAccountKey, "<countainer name>", "/mnt/<your_own_name>")
except:
  pass

###########dbutils functions:
dbutils.fs.help()
dbutils.fs.head(filepath) #to show 
display(dbutils.fs.mounts())
#dbutils.fs.mkdirs("/FileStore/shared_download")
#dbutils.fs.cp(filepath, "/FileStore/shared_download/")

##################
use dbutils to transfer file from one storage to another
#Azure storage, you could NOT create folder, just create to the file level, this is a test
#dbutils.fs.put('/mnt/test/foldertest/readme.text', "Contents of readme")
#below folder has one subfolders, for more levels, please use recursive methods.
##########
base_source='/mnt/source'
base_target='/mnt/target'
folders = dbutils.fs.ls(base_source)
print(len(folders))
for i in range(len(folders)):
  folder_name = folders[i].name
  files=dbutils.fs.ls(base_source+'/'+folder_name)
  for file in files:
    if '.parquet' in file.name:
      dbutils.fs.cp(base_source+'/'+folder_name+'/'+file.name, base_target+base_source2+'/'+file.name)
